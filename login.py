# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from etudiant import  Ui_Etuiant
from os import error
from types import FrameType

from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3 as sqlite

class Ui_LoginWindow(object):
    def OpenWindow(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_Etuiant()
        self.ui.setupUi(self.window)
        LoginWindow.hide()
        self.window.show()

    def setupUi(self, LoginWindow):
        LoginWindow.setObjectName("LoginWindow")
        LoginWindow.resize(639, 403)
        self.centralwidget = QtWidgets.QWidget(LoginWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(110, 90, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setObjectName("userlab")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(110, 150, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setObjectName("passlab")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(250, 100, 201, 20))
        self.lineEdit.setObjectName("lineuser")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setEnabled(True)
        self.lineEdit_2.setGeometry(QtCore.QRect(250, 150, 201, 20))
        self.lineEdit_2.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.lineEdit_2.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_2.setObjectName("linepass")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(310, 220, 75, 41))
        self.pushButton.setObjectName("pushButton")
        LoginWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(LoginWindow)
        self.statusbar.setObjectName("statusbar")
        LoginWindow.setStatusBar(self.statusbar)

        self.retranslateUi(LoginWindow)
        QtCore.QMetaObject.connectSlotsByName(LoginWindow)
        self.pushButton.clicked.connect(self.LoginMethod)

    def retranslateUi(self, LoginWindow):
        _translate = QtCore.QCoreApplication.translate
        LoginWindow.setWindowTitle(_translate("LoginWindow", "EmotionRecon"))
        self.label.setText(_translate("LoginWindow", "Username"))
        self.label_2.setText(_translate("LoginWindow", "Password"))
        self.pushButton.setText(_translate("LoginWindow", "Login"))
    
    def LoginMethod(self):
        username = self.lineEdit.text()
        password = self.lineEdit_2.text()

        # Ouvrir la base de donnee
        connection = sqlite.connect('basdedonnees/database.db')

        # Creation du cursor
        cursor = connection.cursor()

        # Etablir les rqts

        query_verify = "SELECT COUNT(*) FROM COMPTE WHERE USERNAME = \""+username+"\" AND mdp = \""+password+"\""
        # Executer la requete
        cursor.execute(query_verify)
        nb = cursor.fetchone()[0]

        if nb ==0:
             print("Erreur compte introuvable")
             """
             error_dialog = QtWidgets.QErrorMessage()
             error_dialog.setWindowTitle("Erreur")
             error_dialog.showMessage('Information erron√©es')
             error_dialog.exec_()
             """
             msg = QtWidgets.QMessageBox()
             msg.setIcon(QtWidgets.QMessageBox.Critical)
             msg.setText("Username ou mot de passe incorrect")
             msg.setWindowTitle("Error")
             msg.exec_()
             cursor.close()
             connection.close()
        else:
            print("Connected")
            self.OpenWindow()
            cursor.close()
            connection.close()



        




if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    LoginWindow = QtWidgets.QMainWindow()
    ui = Ui_LoginWindow()
    ui.setupUi(LoginWindow)
    LoginWindow.show()
    sys.exit(app.exec_())
