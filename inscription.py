# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'inscription.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3 as sqlite

class Ui_Inscription(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")

        MainWindow.resize(621, 392)
        MainWindow.setStyleSheet("background-color:\"white\"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_inscription = QtWidgets.QLabel(self.centralwidget)
        self.label_inscription.setGeometry(QtCore.QRect(0, 0, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(20)
        font.setItalic(True)
        self.label_inscription.setFont(font)
        self.label_inscription.setStyleSheet("")
        self.label_inscription.setTextFormat(QtCore.Qt.AutoText)
        self.label_inscription.setObjectName("label_inscription")
        self.InscrireBtn = QtWidgets.QPushButton(self.centralwidget)
        self.InscrireBtn.setGeometry(QtCore.QRect(270, 320, 75, 23))
        self.InscrireBtn.setStyleSheet("background-color:rgba(85,98,112,225);\n"
"color:rgba(255,255,255,255);\n"
"border-radius:5px;\n"
"")
        self.InscrireBtn.setObjectName("InscrireBtn")
        self.label_nom = QtWidgets.QLabel(self.centralwidget)
        self.label_nom.setEnabled(True)
        self.label_nom.setGeometry(QtCore.QRect(40, 60, 71, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        font.setKerning(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.label_nom.setFont(font)
        self.label_nom.setFocusPolicy(QtCore.Qt.NoFocus)
        self.label_nom.setStatusTip("")
        self.label_nom.setAutoFillBackground(False)
        self.label_nom.setStyleSheet("")
        self.label_nom.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_nom.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_nom.setLineWidth(1)
        self.label_nom.setTextFormat(QtCore.Qt.AutoText)
        self.label_nom.setScaledContents(False)
        self.label_nom.setObjectName("label_nom")
        self.label_prenom = QtWidgets.QLabel(self.centralwidget)
        self.label_prenom.setGeometry(QtCore.QRect(40, 110, 81, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_prenom.setFont(font)
        
        self.label_prenom.setStyleSheet("color:black")
        self.label_prenom.setObjectName("label_prenom")
        self.label_username = QtWidgets.QLabel(self.centralwidget)
        self.label_username.setGeometry(QtCore.QRect(40, 160, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_username.setFont(font)
        self.label_username.setStyleSheet("")
        self.label_username.setObjectName("label_username")
        self.label_type = QtWidgets.QLabel(self.centralwidget)
        self.label_type.setGeometry(QtCore.QRect(40, 250, 191, 21))
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(80)
        self.label_type.setFont(font)
        self.label_type.setObjectName("label_type")
        self.nom_line = QtWidgets.QLineEdit(self.centralwidget)
        self.nom_line.setGeometry(QtCore.QRect(130, 60, 241, 20))
        font = QtGui.QFont()
        
        font.setPointSize(9)
        self.nom_line.setFont(font)
        self.nom_line.setStyleSheet("background-color:rgba(0,0,0,0);\n"
"border:2px solid rgba(0,0,0,0);\n"
"border-bottom-color:rgba(46,82,101,200);\n"
"color:rgb(0,0,0,200);\n"
"padding-bottom:2px;")
        self.nom_line.setObjectName("nom_line")
        self.prenom_line = QtWidgets.QLineEdit(self.centralwidget)
        self.prenom_line.setGeometry(QtCore.QRect(130, 110, 241, 20))
        font = QtGui.QFont() 
        font.setPointSize(9)
        self.prenom_line.setFont(font)
        self.prenom_line.setStyleSheet("background-color:rgba(0,0,0,0);\n"
"border:2px solid rgba(0,0,0,0);\n"
"border-bottom-color:rgba(46,82,101,200);\n"
"color:rgb(0,0,0,200);\n"
"padding-bottom:2px;")
        self.prenom_line.setObjectName("prenom_line")
        self.usernam_line = QtWidgets.QLineEdit(self.centralwidget)
        self.usernam_line.setGeometry(QtCore.QRect(160, 160, 241, 20))
        font = QtGui.QFont() 
        font.setPointSize(9)
        self.usernam_line.setFont(font)
        self.usernam_line.setStyleSheet("background-color:rgba(0,0,0,0);\n"
"border:2px solid rgba(0,0,0,0);\n"
"border-bottom-color:rgba(46,82,101,200);\n"
"color:rgb(0,0,0,200);\n"
"padding-bottom:2px;")
        self.usernam_line.setObjectName("usernam_line")
        self.label_password = QtWidgets.QLabel(self.centralwidget)
        self.label_password.setGeometry(QtCore.QRect(40, 200, 91, 21))
        font = QtGui.QFont() 
        font.setPointSize(9)
        self.usernam_line.setFont(font)
        self.usernam_line.setStyleSheet("background-color:rgba(0,0,0,0);\n"
"border:2px solid rgba(0,0,0,0);\n"
"border-bottom-color:rgba(46,82,101,200);\n"
"color:rgb(0,0,0,200);\n"
"padding-bottom:2px;")

        font = QtGui.QFont()
        font.setBold(True)
        font.setPointSize(12)
        self.label_password.setFont(font)
        self.label_password.setStyleSheet("")
        
        self.label_password.setObjectName("label_password")
        self.password_line = QtWidgets.QLineEdit(self.centralwidget)
        # Password line
        font = QtGui.QFont()
        font.setPointSize(9)
        self.password_line.setFont(font)
        self.password_line.setStyleSheet("background-color:rgba(0,0,0,0);\n"
"border:2px solid rgba(0,0,0,0);\n"
"border-bottom-color:rgba(46,82,101,200);\n"
"color:rgb(0,0,0,200);\n"
"padding-bottom:2px;")
        
        self.password_line.setGeometry(QtCore.QRect(160, 200, 241, 20))
        self.password_line.setEchoMode(QtWidgets.QLineEdit.Password)
        self.password_line.setObjectName("password_line")
        self.checkBox_etd = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_etd.setGeometry(QtCore.QRect(260, 260, 70, 17))


        self.checkBox_etd.setObjectName("checkBox_etd")
        self.checkBox_ens = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_ens.setGeometry(QtCore.QRect(410, 260, 70, 17))
        self.checkBox_ens.setObjectName("checkBox_ens")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.InscrireBtn.clicked.connect(self.CreateAccount)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "FaceEMotionRecon/Inscription"))
        self.label_inscription.setText(_translate("MainWindow", "Inscription"))
        self.InscrireBtn.setText(_translate("MainWindow", "S\'inscrire"))
        self.label_nom.setText(_translate("MainWindow", "Nom :"))
        self.label_prenom.setText(_translate("MainWindow", "Prenom :"))
        self.label_username.setText(_translate("MainWindow", "Username :"))
        self.label_type.setText(_translate("MainWindow", "S\'inscrire entant que :"))
        self.label_password.setText(_translate("MainWindow", "Password :"))
        self.checkBox_etd.setText(_translate("MainWindow", "etudiant"))
        self.checkBox_ens.setText(_translate("MainWindow", "enseignant"))
    def CreateAccount(self):
        name = self.nom_line.text()
        print(name)
        surname = self.prenom_line.text()
        print(surname)
        username = self.usernam_line.text()
        print(username)
        password = self.password_line.text()
        print(password)
        accountType = "" # for the selected checkbox

        # Connect to data base
        connection = sqlite.connect('basdedonnees/database.db')
        # Create a cursor
        cursor = connection.cursor()

        query_verify ="SELECT COUNT(*) FROM COMPTE WHERE USERNAME =\""+username+"\""
        print(self.checkBox_ens.isChecked())
        
        check_test = ""
        if self.checkBox_ens.isChecked():
            check_test = "done"
            
        if self.checkBox_etd.isChecked():
            check_test="done"
            
        # verify the if all texts line are used
        if name=="" or surname =="" or username=="" or check_test=="" or password=="":
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Critical)
            msg.setText("Veuillez remplire tout les champs et cocher un checkbox")
            msg.setWindowTitle("Error")
            msg.exec_()
        else:
            print("erro1")
            if self.checkBox_etd.isChecked() and self.checkBox_ens.isChecked():
                msg = QtWidgets.QMessageBox()
                msg.setIcon(QtWidgets.QMessageBox.Critical)
                msg.setText("Veuillez choisir qu'un seul type de compte")
                msg.setWindowTitle("Error")
                msg.exec_()
            else:
                
                # if accountype is a teacher
                if self.checkBox_ens.isChecked():
                    
                    accountType = self.checkBox_ens.text()
                    # check if another user have the same current username
                    cursor.execute(query_verify)
                    user_nb = cursor.fetchone()[0] # return the first position in the tuple
                    if user_nb == 1: # if user nb is not 0 so we have this username in our database
                        msg = QtWidgets.QMessageBox()
                        msg.setIcon(QtWidgets.QMessageBox.Critical)
                        msg.setText("Un utilisateur utilise deja ce username, choisissez un autre")
                        msg.setWindowTitle("Error")
                        msg.exec_()
                    print("user nb teacher = ", user_nb)    
                    if user_nb == 0:
                        cursor.execute("INSERT INTO COMPTE VALUES(?,?,?) ",(username,password,accountType))
                        
                        cursor.execute("INSERT INTO ENSEIGNANT VALUES (?,?,?)",(name, surname,username))
                        print("Inserer dans compte et enseignant")
                        
                        connection.commit()
                        connection.close()
                # if accounttype is a student
                if self.checkBox_etd.isChecked():
                    print("cheking student")
                    accountType = self.checkBox_etd.text()
                    # check if another user have the same current username
                    cursor.execute(query_verify)
                    user_nb = cursor.fetchone()[0] # return the first position in the tuple
                    print("user_nb = ", user_nb)
                    if user_nb == 1: # if user nb is not 0 so we have this username in our database
                        msg = QtWidgets.QMessageBox()
                        msg.setIcon(QtWidgets.QMessageBox.Critical)
                        msg.setText("Un utilisateur utilise deja se username, choisissez un autre")
                        msg.setWindowTitle("Error")
                        msg.exec_()
                        cursor.close()
                        connection.close()
                    if user_nb == 0:
                        cursor.execute("INSERT INTO COMPTE VALUES(?,?,?) ",(username,password,accountType))
                        
                        cursor.execute("INSERT INTO ETUDIANT VALUES (?,?,?)",(name, surname,username))
                        connection.commit()
                        cursor.close()
                        connection.close()
                        msg = QtWidgets.QMessageBox()
                        msg.setIcon(QtWidgets.QMessageBox.Information)
                        msg.setText("Compte ajouter")
                        msg.setWindowTitle("Information")
                        msg.exec_()
                        print("Ajouter dans compte et etudiant")
                        
                    
                



             
            
           
        
             



        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_Inscription()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
